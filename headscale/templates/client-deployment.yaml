{{- if .Values.client.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "headscale.fullname" . }}-client
  labels:
    {{- include "headscale.labels" . | nindent 4 }}
    app.kubernetes.io/component: client
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "headscale.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: client
  template:
    metadata:
      labels:
        {{- include "headscale.labels" . | nindent 8 }}
        app.kubernetes.io/component: client
    spec:
      volumes:
      - name: dev-net-tun
        hostPath:
          path: /dev/net/tun
          type: CharDevice
      - name: client-auth
        secret:
          secretName: {{ include "headscale.fullname" . }}-client-authkey
          optional: true
      containers:
      - name: tailscale
        image: "{{ .Values.client.image.repository }}:{{ .Values.client.image.tag }}"
        imagePullPolicy: {{ .Values.client.image.pullPolicy }}
        command:
        - /bin/sh
        - -c
        - |
          set -Eeuo pipefail
          AUTH_FILE="/etc/client-auth/authkey"
          echo "[client] Waiting for preauth key at $AUTH_FILE ..."
          # Try up to ~10 minutes for the Secret to appear via projected volume
          for i in $(seq 1 120); do
            if [ -s "$AUTH_FILE" ]; then
              break
            fi
            echo "[client] auth key not present yet ($i/120)"
            sleep 5
          done

          echo "[client] Starting tailscaled"
          tailscaled &

          # If key exists, perform login; otherwise keep running and allow later manual login
          if [ -s "$AUTH_FILE" ]; then
            AUTH_KEY=$(cat "$AUTH_FILE")
            echo "[client] Performing tailscale up"
            tailscale up --authkey="$AUTH_KEY" --hostname={{ .Chart.Name }}-client --login-server=http://{{ include "headscale.fullname" . }}:8080 || true
          else
            echo "[client] No preauth key found after timeout; skipping tailscale up for now."
          fi

          # Keep container alive
          wait $! || true
          tail -f /dev/null
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - name: dev-net-tun
          mountPath: /dev/net/tun
        - name: client-auth
          mountPath: /etc/client-auth
          readOnly: true
{{- end }}
