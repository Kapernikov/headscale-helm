{{ template "chart.header" . }}
{{ template "chart.description" . }}

{{ template "chart.versionBadge" . }}{{ template "chart.typeBadge" . }}{{ template "chart.appVersionBadge" . }}

## Client Container

This Helm chart includes an optional client container that runs a Tailscale client (`tailscaled`) alongside the Headscale server. This client automatically registers with the Headscale server using a pre-authenticated key, simplifying the initial setup for testing or demonstration purposes.

The client container is configured to:
- Start the `tailscaled` daemon in the background.
- Use `tailscale up` to connect to the Headscale server.

You can enable or disable the client container via the `client.enabled` value in `values.yaml`.

## Persistence

Headscale requires persistence to store its database and noise private key. This chart configures a PersistentVolumeClaim (PVC) to ensure that Headscale's data is not lost across pod restarts or redeployments.

By default, persistence is enabled with a 1Gi volume. You can configure the size and mount path through the `persistence` section in `values.yaml`.

## Ingress

The chart provides an option to expose the Headscale service via an Ingress resource. This allows you to access your Headscale instance from outside the Kubernetes cluster using a domain name.

You can enable Ingress by setting `ingress.enabled` to `true` in `values.yaml`. You can also configure the Ingress class, hosts, TLS settings, and annotations to customize its behavior for your environment.

## Headscale UI

This chart can optionally deploy the community Headscale UI from `gurucomputing/headscale-ui`.

- Enable by setting `ui.enabled` to `true`.
- A separate `Service` named `<release>-headscale-ui` is created on port `ui.service.port` (default 80).
- If `ingress.enabled` is also `true`, an additional `Ingress` is created for the UI using `ui.ingress.*` (host, path, pathType, annotations, tls). The UI Ingress uses the same `ingress.className` as the main service.

Example snippet:

```yaml
ui:
  enabled: true
  headscaleUrl: "http://my-release-headscale.default.svc.cluster.local:8080" # optional, defaults to internal service
  ingress:
    host: headscale-ui.example.com
    path: /
    pathType: ImplementationSpecific
    tls:
      - secretName: headscale-ui-tls
        hosts: [headscale-ui.example.com]
```

## Installing the Chart

To install the chart with the release name `my-release`:

```console
$ helm repo add foo-bar http://charts.foo-bar.com
$ helm install my-release foo-bar/{{ template "chart.name" . }}
```

{{ template "chart.requirementsSection" . }}

{{ template "chart.valuesSection" . }}

{{ template "helm-docs.versionFooter" . }}
